{"version":3,"sources":["components/Navbar.js","components/TextArea.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","style","fontSize","marginRight","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","c","aria-current","cursor","onClick","element","document","getElementById","scrollIntoView","behavior","role","toggle","htmlFor","TextArea","_useState","useState","_useState2","Object","slicedToArray","text","setText","checkLength","length","showAlert","value","onChange","e","target","rows","toUpperCase","toLowerCase","navigator","clipboard","writeText","s","split","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","filter","About","backgroundColor","border","aria-labelledby","data-bs-parent","Alert","height","alert","textAlign","App","setMode","_useState3","_useState4","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2a1baacd.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const handleClickScroll = () => {\r\n    const element = document.getElementById('aboutPage');\r\n    if (element) {\r\n      // ðŸ‘‡ Will scroll smoothly to the top of the next section\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className={`nav-link active text-${props.mode === 'light' ? 'dark' : 'light'}`} style={{ fontSize: '2em', marginRight: '1em' }} > Wordle</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" c aria-current=\"page\" style={{ fontSize: '1.2em', cursor: 'pointer' }}>Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" id='about' onClick={handleClickScroll} style={{ fontSize: '1.2em', cursor: 'pointer' }}>About</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggle} />\r\n              <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\" id=\"switchMode\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}","\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextArea(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n\r\n\r\n\r\n\r\n  function checkLength() {\r\n    if (text.length === 0) {\r\n      { props.showAlert(\"Text Area Is Empty!\", \"secondary\") }\r\n    }\r\n  }\r\n  function handelText(e) {\r\n    setText(e.target.value);\r\n\r\n  }\r\n  function handleUpClick() {\r\n    checkLength()\r\n    setText(text.toUpperCase());\r\n  }\r\n  function handleLoClick() {\r\n    checkLength()\r\n    setText(text.toLowerCase());\r\n  }\r\n  function handleClear() {\r\n    checkLength()\r\n    setText(\"\");\r\n  }\r\n  function handleCopy() {\r\n    checkLength()\r\n    // var copyText = document.getElementById(\"exampleFormControlTextarea1\");\r\n\r\n    // copyText.select();\r\n\r\n    // navigator.clipboard.writeText(copyText.value);\r\n    navigator.clipboard.writeText(text);\r\n  }\r\n\r\n  function handleExtraSpace() {\r\n    checkLength()\r\n    let s = text.split(/[ ]+/);\r\n    setText(s.join(\" \"));\r\n  }\r\n  function speak() {\r\n    checkLength()\r\n    var msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"container\" >\r\n        <div className=\"mb-3\">\r\n          <label\r\n            htmlFor=\"exampleFormControlTextarea1\"\r\n            className={`form-label my-1 text-${props.mode === 'light' ? 'dark' : 'light'}`}\r\n            style={{ fontSize: 40 }}\r\n          >\r\n            TEXTAREA\r\n          </label>\r\n          <textarea\r\n            className=\"form-control my-3\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            value={text}\r\n            onChange={handelText}\r\n            rows=\"8\"\r\n          ></textarea>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-outline-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}\r\n            onClick={handleUpClick}\r\n          >\r\n            Upper Case\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-outline-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}\r\n            onClick={handleLoClick}\r\n          >\r\n            Lower Case\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-outline-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}\r\n            onClick={handleClear}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-outline-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}\r\n            onClick={handleCopy}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-outline-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}\r\n            onClick={handleExtraSpace}\r\n          >\r\n            Remove Spaces\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-outline-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}\r\n            onClick={speak}\r\n          >\r\n            Read Text\r\n          </button>\r\n        </div >\r\n        <h3 className={`my-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>Text Summray</h3>\r\n        <p className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n\r\n          {text.split(/\\s+/).filter((element) => {\r\n            return element.length !== 0\r\n          }).length} : Words , {text.length} : Characters\r\n        </p>\r\n      </div >\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <>\r\n      <div className='container' id='aboutPage'>\r\n        <h3 className={` my-5 text-${props.mode === 'light' ? 'dark' : 'light'}`} style={{ fontSize: '2.5em' }}>About Page</h3>\r\n        <div className='container my-5'>\r\n\r\n          <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n            <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'dark' ? '#3e3a3a' : 'whitesmoke' }}>\r\n              <h2 className=\"accordion-header\" id=\"flush-headingOne\" >\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"button\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(29 27 27)' : '#e7f1ff', border: '5px    solid white' }} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                  <strong>  Convert To Upper Case</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                <div className={`accordion-body text-${props.mode === 'light' ? 'dark' : 'light'}`}>Change Text Case is a handy web application that enables you to change the text case of any given text. Simply copy and paste the text into the text area And this button will,Convert text to all uppercase letters. Here is an example. The word hello becomes HELLO.</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'dark' ? '#3e3a3a' : 'whitesmoke' }}>\r\n              <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} style={{ backgroundColor: props.mode === 'dark' ? 'rgb(29 27 27)' : '#e7f1ff', border: '5px    solid white' }} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n                  <strong> Convert To Lower Case</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n                <div className={`accordion-body text-${props.mode === 'light' ? 'dark' : 'light'}`}>Change Text Case is a handy web application that enables you to change the text case of any given text. Simply copy and paste the text into the text area.And this button will,Convert text to all lowercase letters.</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'dark' ? '#3e3a3a' : 'whitesmoke' }}>\r\n              <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"button\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(29 27 27)' : '#e7f1ff', border: '5px    solid white' }} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n                  <strong>  Clear Text</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n                <div className={`accordion-body text-${props.mode === 'light' ? 'dark' : 'light'}`}>The text in textarea will be clear by using this button</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'dark' ? '#3e3a3a' : 'whitesmoke' }}>\r\n              <h2 className=\"accordion-header\" id=\"flush-headingFour\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"button\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(29 27 27)' : '#e7f1ff', border: '5px    solid white' }} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFour\" aria-expanded=\"false\" aria-controls=\"flush-collapseFour\">\r\n                  <strong>Copy Text</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"flush-collapseFour\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingFour\" data-bs-parent=\"#accordionFlushExample\">\r\n                <div className={`accordion-body text-${props.mode === 'light' ? 'dark' : 'light'}`}>By using this button whatever text is there in textarea is copied to clipboard</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'dark' ? '#3e3a3a' : 'whitesmoke' }}>\r\n              <h2 className=\"accordion-header\" id=\"flush-headingFive\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"button\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(29 27 27)' : '#e7f1ff', border: '5px    solid white' }} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFive\" aria-expanded=\"false\" aria-controls=\"flush-collapseFive\">\r\n                  <strong> Remove Whitespaces</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"flush-collapseFive\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingFive\" data-bs-parent=\"#accordionFlushExample\">\r\n                <div className={`accordion-body text-${props.mode === 'light' ? 'dark' : 'light'}`}>This button helps to remove all the whitesapces between or around the text without change the text</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'dark' ? '#3e3a3a' : 'whitesmoke' }}>\r\n              <h2 className=\"accordion-header\" id=\"flush-headingSix\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"button\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(29 27 27)' : '#e7f1ff', border: '5px    solid white' }} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseSix\" aria-expanded=\"false\" aria-controls=\"flush-collapseSix\">\r\n                  <strong> Read Message </strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"flush-collapseSix\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingSix\" data-bs-parent=\"#accordionFlushExample\">\r\n                <div className={`accordion-body text-${props.mode === 'light' ? 'dark' : 'light'}`}>This button helps to read the message , whatever text is placed in textarea</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <>\r\n            <div style={{ height: '5em' }}>\r\n                {props.alert &&\r\n                    <div className={`alert alert-${props.alert.type}`} role=\"alert\" style={{ textAlign: 'center' }}><strong>\r\n                        {props.alert.msg}\r\n                    </strong>\r\n                    </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport React, { useState } from 'react'\n\nimport About from './components/About';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode Is Enabled\", \"light\")\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = '#e7f1ff';\n      showAlert(\"Light Mode Is Enabled\", \"info\")\n    }\n  }\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  return (\n    <>\n\n      <Navbar mode={mode} toggle={toggleMode} />\n      <Alert alert={alert} />\n      <TextArea mode={mode} showAlert={showAlert} />\n\n      <About mode={mode} />\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}